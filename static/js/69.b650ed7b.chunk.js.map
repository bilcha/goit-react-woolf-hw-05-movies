{"version":3,"file":"static/js/69.b650ed7b.chunk.js","mappings":"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","sources":["api/moviesAPI.jsx","webpack://goit-react-woolf-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-woolf-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","webpack://goit-react-woolf-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","components/Movies/Movies.jsx","page/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst headers = {\n  accept: 'application/json',\n  Authorization:\n    'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZGE0YTM3MDM1NTM2MWEyYTQ4MTQ1OWExMzU0NTc4MiIsInN1YiI6IjY1ZGU5Y2JjOGM0NGI5MDE3YzEzNzhjNyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.-Cov2tBmWdZO0wVVJnB0BAN5OMqJn3c_EyUSJoZKJZM',\n};\n\nexport const getMoviesAPI = async () => {\n  const { data } = await axios('trending/movie/day?language=en-US', {\n    headers: headers,\n  });\n  return data.results;\n};\n\nexport const getFilteredMoviesAPI = async queryString => {\n  const { data } = await axios(\n    `search/movie?include_adult=false&language=en-US&page=1&query=${queryString}`,\n    { headers: headers }\n  );\n  return data.results;\n};\n\nexport const getMovieDetailsAPI = async id => {\n  const { data } = await axios(`movie/${id}?language=en-US&`, {\n    headers: headers,\n  });\n  return data;\n};\n\nexport const getMovieDetailsDataAPI = async path => {\n  const { data } = await axios(`movie/${path}?language=en-US&`, {\n    headers: headers,\n  });\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\"};","import { Link, useLocation } from 'react-router-dom';\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className={styles.moviesList}>\n        {data.map(el => {\n          return (\n            <li key={el.id}>\n              <Link to={`/movies/${el.id}`} state={{ from: location }}>\n                {el.original_title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"Movies_formWrapper__DwaXQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"inputField\":\"SearchForm_inputField__i8cMu\",\"searchBtn\":\"SearchForm_searchBtn__rp2a7\"};","import { useState } from 'react';\nimport styles from './SearchForm.module.css';\n\nconst SearchForm = ({ getMoviesByName }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const searchMovieHandler = e => {\n    e.preventDefault();\n    searchQuery.length > 0 && getMoviesByName(searchQuery);\n  };\n  const handleChange = e => {\n    setSearchQuery(e.target.value.trim());\n  };\n  return (\n    <form onSubmit={searchMovieHandler}>\n      <label htmlFor=\"movieSearch\"></label>\n      <input\n        className={styles.inputField}\n        id=\"movieSearch\"\n        type=\"search\"\n        name=\"name\"\n        required\n        value={searchQuery}\n        onChange={handleChange}\n      />\n      <button className={styles.searchBtn}>Search</button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport styles from './Movies.module.css';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { getFilteredMoviesAPI } from 'api/moviesAPI';\n\nconst Movies = () => {\n  const [moviesItems, setMoviesItems] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesListIsShowing, setMoviesListIsShowing] = useState(false);\n  const [error, setError] = useState('');\n\n  const getMoviesByName = queryParam => {\n    setSearchParams({ query: queryParam });\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      debugger;\n      const getMovies = async () => {\n        try {\n          let data;\n          data = await getFilteredMoviesAPI(query);\n          if (data.length === 0) {\n            setError(\"Sorry, we didn't find anything for your request.\");\n          } else {\n            setMoviesListIsShowing(true);\n            setMoviesItems(data);\n          }\n        } catch (error) {\n          console.log(error);\n          setError('Oops... Something went wrong. Please try again later.');\n        } finally {\n        }\n      };\n      getMovies();\n    }\n  }, [searchParams]);\n\n  return (\n    <div className={styles.formWrapper}>\n      <SearchForm getMoviesByName={getMoviesByName} />\n      {moviesListIsShowing && <MoviesList data={moviesItems} />}\n      {error && <h5>{error}</h5>}\n    </div>\n  );\n};\n\nexport default Movies;\n","import Movies from 'components/Movies/Movies';\n\nconst MoviesPage = () => {\n  return <Movies />;\n};\n\nexport default MoviesPage;\n"],"names":["axios","headers","accept","Authorization","getMoviesAPI","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios","data","_context","prev","next","sent","abrupt","results","stop","apply","arguments","getFilteredMoviesAPI","_ref2","_callee2","queryString","_yield$axios2","_context2","concat","_x","getMovieDetailsAPI","_ref3","_callee3","id","_yield$axios3","_context3","_x2","getMovieDetailsDataAPI","_ref4","_callee4","path","_yield$axios4","_context4","_x3","location","useLocation","_jsx","_Fragment","children","className","styles","map","el","Link","to","state","from","original_title","getMoviesByName","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_jsxs","onSubmit","e","preventDefault","length","htmlFor","type","name","required","value","onChange","target","trim","moviesItems","setMoviesItems","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","moviesListIsShowing","setMoviesListIsShowing","_useState5","_useState6","error","setError","useEffect","query","get","getMovies","t0","console","log","finish","SearchForm","queryParam","MoviesList","Movies"],"sourceRoot":""}